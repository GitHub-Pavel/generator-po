'use strict';
const Generator = require('yeoman-generator');

module.exports = class extends Generator {
  writing() {
    this.fs.copy(
      this.templatePath('package.json'),
      this.destinationPath('package.json')
    );
    this.fs.copy(
      this.templatePath('src/assets/script.php'),
      this.destinationPath('src/assets/script.php')
    );
    this.fs.copy(
      this.templatePath('src/pug/common/modals.pug'),
      this.destinationPath('src/pug/common/modals.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/common/layout.pug'),
      this.destinationPath('src/pug/common/layout.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/common/header.pug'),
      this.destinationPath('src/pug/common/header.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/common/footer.pug'),
      this.destinationPath('src/pug/common/footer.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/includes/main-menu.pug'),
      this.destinationPath('src/pug/includes/main-menu.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/includes/breadcrumbs.pug'),
      this.destinationPath('src/pug/includes/breadcrumbs.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/pages/index.pug'),
      this.destinationPath('src/pug/pages/index.pug')
    );
    this.fs.copy(
      this.templatePath('src/pug/pages/layout.map.pug'),
      this.destinationPath('src/pug/pages/layout.map.pug')
    );
    this.fs.copy(
      this.templatePath('src/js/modules/pages.config.json'),
      this.destinationPath('src/js/modules/pages.config.json')
    );
    this.fs.copy(
      this.templatePath('src/js/modules/loadSprite.js'),
      this.destinationPath('src/js/modules/loadSprite.js')
    );
    this.fs.copy(
      this.templatePath('src/js/main.js'),
      this.destinationPath('src/js/main.js')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/index.scss'),
      this.destinationPath('src/scss/components/index.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/body.scss'),
      this.destinationPath('src/scss/components/body.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/header.scss'),
      this.destinationPath('src/scss/components/header.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/hero.scss'),
      this.destinationPath('src/scss/components/hero.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/text.scss'),
      this.destinationPath('src/scss/components/text.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/title.scss'),
      this.destinationPath('src/scss/components/title.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/components/wrapper.scss'),
      this.destinationPath('src/scss/components/wrapper.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/main.scss'),
      this.destinationPath('src/scss/main.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/_variables.scss'),
      this.destinationPath('src/scss/_variables.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/_settings.scss'),
      this.destinationPath('src/scss/_settings.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/_mixins.scss'),
      this.destinationPath('src/scss/_mixins.scss')
    );
    this.fs.copy(
      this.templatePath('src/scss/_fonts.scss'),
      this.destinationPath('src/scss/_fonts.scss')
    );
    this.fs.copy(
      this.templatePath('src/sprite/home.svg'),
      this.destinationPath('src/sprite/home.svg')
    );
    this.fs.copy(
      this.templatePath('src/img/favicon.png'),
      this.destinationPath('src/img/favicon.png')
    );
    this.fs.copy(
      this.templatePath('src/img/logo.png'),
      this.destinationPath('src/img/logo.png')
    );
    this.fs.copy(
      this.templatePath('src/img/sprite.svg'),
      this.destinationPath('src/img/sprite.svg')
    );
    this.fs.copy(
      this.templatePath('src/video/cat.mp4'),
      this.destinationPath('src/video/cat.mp4')
    );
    this.fs.copy(
      this.templatePath('src/fonts/Montserrat-Bold.eot'),
      this.destinationPath('src/fonts/Montserrat-Bold.eot')
    );
    this.fs.copy(
      this.templatePath('src/fonts/Montserrat-Bold.ttf'),
      this.destinationPath('src/fonts/Montserrat-Bold.ttf')
    );
    this.fs.copy(
      this.templatePath('src/fonts/Montserrat-Bold.woff'),
      this.destinationPath('src/fonts/Montserrat-Bold.woff')
    );
    this.fs.copy(
      this.templatePath('src/fonts/Montserrat-Bold.woff2'),
      this.destinationPath('src/fonts/Montserrat-Bold.woff2')
    );
    this.fs.copy(
      this.templatePath('postcss.config.js'),
      this.destinationPath('postcss.config.js')
    );
    this.fs.copy(
      this.templatePath('webpack.config.js'),
      this.destinationPath('webpack.config.js')
    );
    this.fs.copy(
      this.templatePath('.htaccess'),
      this.destinationPath('.htaccess')
    );
    this.fs.copy(
      this.templatePath('.gitignore'),
      this.destinationPath('.gitignore')
    );
    this.fs.copy(
      this.templatePath('.babelrc'),
      this.destinationPath('.babelrc')
    );
    this.fs.copy(
      this.templatePath('gulpfile.js'),
      this.destinationPath('gulpfile.js')
    );
  }

  installingLoadsh() {
    this.npmInstall([
      '@babel/core',
      '@babel/preset-env',
      'autoprefixer',
      'babel-loader',
      'clean-webpack-plugin',
      'copy-webpack-plugin',
      'cross-env',
      'css-loader',
      'css-mqpacker',
      'cssnano',
      'file-loader',
      'fs',
      'gulp',
      'gulp-svg-sprite',
      'gulp-ttf2eot',
      'gulp-ttf2woff',
      'gulp-ttf2woff2',
      'gulp-watch',
      'html-webpack-plugin',
      'imagemin-webpack',
      'imagemin-svgo',
      'imagemin-pngquant',
      'imagemin-optipng',
      'imagemin-mozjpeg',
      'imagemin-jpegtran',
      'imagemin-gifsicle',
      'less',
      'less-loader',
      'mini-css-extract-plugin',
      'node-sass',
      'postcss',
      'postcss-loader',
      'pug',
      'pug-loader',
      'rimraf',
      'sass-loader',
      'url-loader',
      'webpack',
      'webpack-cli',
      'webpack-dev-server'
    ], {
      'save-dev': true
    })
  }
};
